// Code generated by "stringer -type Type"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Error-1]
	_ = x[Warn-2]
	_ = x[Info-3]
	_ = x[Update-4]
	_ = x[Asset-5]
	_ = x[Menu-6]
	_ = x[Player-7]
	_ = x[Login-20]
	_ = x[DPad-21]
	_ = x[Repeat-22]
	_ = x[UpdateGps-23]
	_ = x[UpdatePlayers-24]
	_ = x[PlayerMessage-25]
	_ = x[ErrorMessage-26]
	_ = x[BufferSize-27]
	_ = x[PlayerLogoff-28]
	_ = x[Ping-29]
	_ = x[Pong-30]
	_ = x[World-31]
	_ = x[Human-1024]
	_ = x[Robot-1025]
	_ = x[Alien-1026]
	_ = x[Zombie-1027]
	_ = x[Skeleton-1028]
	_ = x[NPC1-1029]
	_ = x[NPC2-1030]
}

const (
	_Type_name_0 = "ErrorWarnInfoUpdateAssetMenuPlayer"
	_Type_name_1 = "LoginDPadRepeatUpdateGpsUpdatePlayersPlayerMessageErrorMessageBufferSizePlayerLogoffPingPongWorld"
	_Type_name_2 = "HumanRobotAlienZombieSkeletonNPC1NPC2"
)

var (
	_Type_index_0 = [...]uint8{0, 5, 9, 13, 19, 24, 28, 34}
	_Type_index_1 = [...]uint8{0, 5, 9, 15, 24, 37, 50, 62, 72, 84, 88, 92, 97}
	_Type_index_2 = [...]uint8{0, 5, 10, 15, 21, 29, 33, 37}
)

func (i Type) String() string {
	switch {
	case 1 <= i && i <= 7:
		i -= 1
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case 20 <= i && i <= 31:
		i -= 20
		return _Type_name_1[_Type_index_1[i]:_Type_index_1[i+1]]
	case 1024 <= i && i <= 1030:
		i -= 1024
		return _Type_name_2[_Type_index_2[i]:_Type_index_2[i+1]]
	default:
		return "UnknownType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
